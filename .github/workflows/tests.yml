name: tests

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: [
          "3.13.0",
          "3.13t",
        ]

    name: ${{ matrix.python-version }}

    steps:
      - uses: actions/checkout@v4
      - name: set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        if: "!endsWith(matrix.python-version, 't')"
        with:
          python-version: ${{ matrix.python-version }}
      - name: set up python ${{ matrix.python-version }}
        uses: astral-sh/setup-uv@v3
        if: endsWith(matrix.python-version, 't')
      - if: endsWith(matrix.python-version, 't')
        run: |
          uv python install ${{ matrix.python-version }}
          uv venv --python ${{ matrix.python-version }}
          . .venv/bin/activate
          echo PATH=$PATH >> $GITHUB_ENV
      - run: python --version --version && which python
      - name: system info
        run: |
          uname -a
          cat /proc/cpuinfo
      - name: install dependencies & cereggii
        run: |
          python -m pip install --upgrade pip
          pip -V
          pip install .[dev]
      - name: test with pytest
        run: |
          pytest --junitxml=junit/test-results-${{ matrix.python-version }}.xml
        if: ${{ always() }}
      - name: upload pytest test results
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results-${{ matrix.python-version }}
          path: junit/test-results-${{ matrix.python-version }}.xml
        if: ${{ always() }}
